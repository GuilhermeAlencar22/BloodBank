{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermealencar/Desktop/Blood Bank/BloodBank/frontend/src/pages/doacao/DoacaoForm.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/doacao/DoacaoForm.jsx\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoacaoForm() {\n  _s();\n  const [cpf, setCpf] = useState(\"\");\n  const [quantidade, setQuantidade] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:8080/doadores/\" + cpf).then(res => {\n      if (!res.ok) throw new Error(\"Doador não encontrado!\");\n      return res.json();\n    }).then(doador => {\n      const tipo = doador.tipoSanguineo;\n\n      // Cria X bolsas\n      for (let i = 0; i < parseInt(quantidade); i++) {\n        fetch(\"http://localhost:8080/bolsas\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            tipoSanguineo: tipo,\n            cpfDoador: cpf\n          })\n        });\n      }\n\n      // Atualiza estoque\n      fetch(\"http://localhost:8080/estoque/\" + tipo).then(res => res.ok ? res.json() : null).then(estoque => {\n        if (estoque) {\n          // já existe -> PUT com nova quantidade\n          estoque.qtdBolsas += parseInt(quantidade);\n          fetch(\"http://localhost:8080/estoque/\" + estoque.idEstoque, {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(estoque)\n          });\n        } else {\n          // cria novo tipo\n          fetch(\"http://localhost:8080/estoque\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              tipoSanguineo: tipo,\n              qtdBolsas: parseInt(quantidade)\n            })\n          });\n        }\n      });\n      alert(\"Doação registrada com sucesso!\");\n      setCpf(\"\");\n      setQuantidade(\"\");\n    }).catch(err => alert(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registrar Doa\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"CPF do Doador:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: cpf,\n        onChange: e => setCpf(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Quantidade de Bolsas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: quantidade,\n        onChange: e => setQuantidade(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registrar Doa\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(DoacaoForm, \"EYZRrR1NRXMZ/XFIW9KBnhIcwiE=\");\n_c = DoacaoForm;\nexport default DoacaoForm;\nvar _c;\n$RefreshReg$(_c, \"DoacaoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DoacaoForm","_s","cpf","setCpf","quantidade","setQuantidade","handleSubmit","e","preventDefault","fetch","then","res","ok","Error","json","doador","tipo","tipoSanguineo","i","parseInt","method","headers","body","JSON","stringify","cpfDoador","estoque","qtdBolsas","idEstoque","alert","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["/Users/guilhermealencar/Desktop/Blood Bank/BloodBank/frontend/src/pages/doacao/DoacaoForm.jsx"],"sourcesContent":["// frontend/src/pages/doacao/DoacaoForm.jsx\nimport React, { useState } from \"react\";\n\nfunction DoacaoForm() {\n  const [cpf, setCpf] = useState(\"\");\n  const [quantidade, setQuantidade] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    fetch(\"http://localhost:8080/doadores/\" + cpf)\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Doador não encontrado!\");\n        return res.json();\n      })\n      .then((doador) => {\n        const tipo = doador.tipoSanguineo;\n\n        // Cria X bolsas\n        for (let i = 0; i < parseInt(quantidade); i++) {\n          fetch(\"http://localhost:8080/bolsas\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ tipoSanguineo: tipo, cpfDoador: cpf }),\n          });\n        }\n\n        // Atualiza estoque\n        fetch(\"http://localhost:8080/estoque/\" + tipo)\n          .then((res) => res.ok ? res.json() : null)\n          .then((estoque) => {\n            if (estoque) {\n              // já existe -> PUT com nova quantidade\n              estoque.qtdBolsas += parseInt(quantidade);\n              fetch(\"http://localhost:8080/estoque/\" + estoque.idEstoque, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(estoque),\n              });\n            } else {\n              // cria novo tipo\n              fetch(\"http://localhost:8080/estoque\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                  tipoSanguineo: tipo,\n                  qtdBolsas: parseInt(quantidade),\n                }),\n              });\n            }\n          });\n\n        alert(\"Doação registrada com sucesso!\");\n        setCpf(\"\");\n        setQuantidade(\"\");\n      })\n      .catch((err) => alert(err));\n  };\n\n  return (\n    <div>\n      <h2>Registrar Doação</h2>\n      <form onSubmit={handleSubmit}>\n        <label>CPF do Doador:</label>\n        <input value={cpf} onChange={(e) => setCpf(e.target.value)} required />\n\n        <br />\n\n        <label>Quantidade de Bolsas:</label>\n        <input\n          type=\"number\"\n          value={quantidade}\n          onChange={(e) => setQuantidade(e.target.value)}\n          required\n        />\n\n        <br />\n        <button type=\"submit\">Registrar Doação</button>\n      </form>\n    </div>\n  );\n}\n\nexport default DoacaoForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}