{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermealencar/Desktop/BloodBankProject/BloodBank/frontend/src/pages/doador/DoadorForm.jsx\",\n  _s = $RefreshSig$();\n// src/pages/doador/DoadorForm.jsx\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoadorForm() {\n  _s();\n  const [form, setForm] = useState({\n    cpf: \"\",\n    nome: \"\",\n    idade: \"\",\n    sexo: \"\",\n    tipoSanguineo: \"\",\n    enderecoRua: \"\",\n    enderecoCep: \"\",\n    enderecoCidade: \"\",\n    enderecoEstado: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const doador = {\n      pessoa: {\n        cpf: form.cpf,\n        nome: form.nome,\n        idade: parseInt(form.idade, 10),\n        tipoSanguineo: form.tipoSanguineo,\n        enderecoRua: form.enderecoRua,\n        enderecoCep: form.enderecoCep,\n        enderecoCidade: form.enderecoCidade,\n        enderecoEstado: form.enderecoEstado\n      },\n      sexo: form.sexo\n    };\n    fetch(\"http://localhost:8080/doadores\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(doador)\n    }).then(async res => {\n      const data = await res.json().catch(() => ({}));\n      if (!res.ok) {\n        throw new Error(data.error || \"Erro ao cadastrar doador\");\n      }\n      alert(data.message || \"Doador cadastrado com sucesso!\");\n      setForm({\n        cpf: \"\",\n        nome: \"\",\n        idade: \"\",\n        sexo: \"\",\n        tipoSanguineo: \"\",\n        enderecoRua: \"\",\n        enderecoCep: \"\",\n        enderecoCidade: \"\",\n        enderecoEstado: \"\"\n      });\n    }).catch(err => {\n      alert(\"Erro ao cadastrar doador: \" + err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Novo Doador\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [[\"cpf\", \"nome\", \"idade\", \"sexo\", \"tipoSanguineo\", \"enderecoRua\", \"enderecoCep\", \"enderecoCidade\", \"enderecoEstado\"].map(fieldName => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [fieldName.charAt(0).toUpperCase() + fieldName.slice(1), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: fieldName,\n          value: form[fieldName],\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, fieldName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(DoadorForm, \"wglhVgLRugf/Ry+b1DRtwRM9GfA=\");\n_c = DoadorForm;\nexport default DoadorForm;\nvar _c;\n$RefreshReg$(_c, \"DoadorForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DoadorForm","_s","form","setForm","cpf","nome","idade","sexo","tipoSanguineo","enderecoRua","enderecoCep","enderecoCidade","enderecoEstado","handleChange","e","name","value","target","handleSubmit","preventDefault","doador","pessoa","parseInt","fetch","method","headers","body","JSON","stringify","then","res","data","json","catch","ok","Error","error","alert","message","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","fieldName","charAt","toUpperCase","slice","onChange","required","type","_c","$RefreshReg$"],"sources":["/Users/guilhermealencar/Desktop/BloodBankProject/BloodBank/frontend/src/pages/doador/DoadorForm.jsx"],"sourcesContent":["// src/pages/doador/DoadorForm.jsx\n\nimport React, { useState } from \"react\";\n\nfunction DoadorForm() {\n  const [form, setForm] = useState({\n    cpf: \"\",\n    nome: \"\",\n    idade: \"\",\n    sexo: \"\",\n    tipoSanguineo: \"\",\n    enderecoRua: \"\",\n    enderecoCep: \"\",\n    enderecoCidade: \"\",\n    enderecoEstado: \"\"\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setForm({ ...form, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const doador = {\n      pessoa: {\n        cpf: form.cpf,\n        nome: form.nome,\n        idade: parseInt(form.idade, 10),\n        tipoSanguineo: form.tipoSanguineo,\n        enderecoRua: form.enderecoRua,\n        enderecoCep: form.enderecoCep,\n        enderecoCidade: form.enderecoCidade,\n        enderecoEstado: form.enderecoEstado\n      },\n      sexo: form.sexo\n    };\n\n    fetch(\"http://localhost:8080/doadores\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(doador)\n    })\n      .then(async (res) => {\n        const data = await res.json().catch(() => ({}));\n        if (!res.ok) {\n          throw new Error(data.error || \"Erro ao cadastrar doador\");\n        }\n        alert(data.message || \"Doador cadastrado com sucesso!\");\n        setForm({\n          cpf: \"\",\n          nome: \"\",\n          idade: \"\",\n          sexo: \"\",\n          tipoSanguineo: \"\",\n          enderecoRua: \"\",\n          enderecoCep: \"\",\n          enderecoCidade: \"\",\n          enderecoEstado: \"\"\n        });\n      })\n      .catch((err) => {\n        alert(\"Erro ao cadastrar doador: \" + err.message);\n      });\n  };\n\n  return (\n    <div>\n      <h2>Novo Doador</h2>\n      <form onSubmit={handleSubmit}>\n        {[\"cpf\", \"nome\", \"idade\", \"sexo\", \"tipoSanguineo\", \"enderecoRua\", \"enderecoCep\", \"enderecoCidade\", \"enderecoEstado\"].map((fieldName) => (\n          <div key={fieldName}>\n            <label>{fieldName.charAt(0).toUpperCase() + fieldName.slice(1)}:</label>\n            <input\n              name={fieldName}\n              value={form[fieldName]}\n              onChange={handleChange}\n              required\n            />\n          </div>\n        ))}\n        <button type=\"submit\">Cadastrar</button>\n      </form>\n    </div>\n  );\n}\n\nexport default DoadorForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}